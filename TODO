Sweetass clock whose hand(s) are the string of the time

click and drag on logo to start spinning (like bottle) or clic and pull, then let go to spin. 

add last.fm artist photos

store everything in the model dbs in a browser sqlite if possible - make for better long-term
visualizations

keyword search for all entries

bff proxy for each cell

refresh countdown on hover of each grid_title

add top gradient

do something like http://www.youworkforthem.com/product.php?sku=P1139 where all the cells get tinted
blue and a large yellow thing comes up in front of them. 

BEFORE LUNCH

make sure iphone version still works with summary box

fix top part on FF on PC

clear # on scroll

set body hight to be super high so scrollbar showing aint fuck shit up

bottom bar of logos: made using <mootools logo> on a <apple logo>. also butterfly achewood vimeo flickr delicious



ARCHITECTURE

rename 'data' as it is now to 'json' 

model has array called DB and methods like 'all' and 'first(int)' that return items (rows) from DB

model has to_cells method that does title_elem + this.db.map(function(row){return row.to_cell()})
DB item has to_cell (passed in by model at creation time) that makes a cell.

model has make method that takes in json and returns DB
or
model calls json.asdf.arraypart.map(f) where f returns an DB

Cell is a template - takes in an object and makes html/events

a cell has a title, html and classes. it doesn't have a created_on. 

each DB item (row) from a given model can be unique but should have created_on (standard column)

NO CONTROLERS - the way it is now if you want two twitter grids you'd have to copy and paste the 
instantiation call. no state outside of instantiation laaame. 


GOAL - return items that act like arrays but have special methods

model.first(10).to_cells()
model.first(10).get('created_on')

	is this better than just using map?










	// var DeliciousCell = new Class({
	// 	initialize: function(data){		
	// 		this.element = this.generate_element(data)
	// 		return this
	// 	},
	// 	
	// 	generate_element: function(data){
	// 		var tmp = new Element('div', {'id':'delicious-block', 'class':'cell full-width'}).adopt([
	// 			data.map(function(bookmark,i){
	// 				return new Element('a', {
	// 					'html':bookmark.d,
	// 					'class':'delicious-bookmark ' + (i.is_even() ? 'even' : 'odd')
	// 				}).set('href', bookmark.u)
	// 			})
	// 		])		
	// 		return tmp
	// 	},
	// 	
	// 	to_html: function(){
	// 		return this.element
	// 	}
	// })